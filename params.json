{
  "name": "Numbers.js",
  "tagline": "A helper library to operate numbers and series.",
  "body": "# Numbers.js\r\nA helper library to operate numbers\r\n\r\n# Install\r\nNumbers.js is available as npm package and can be installed as `$ npm install number.js` or browserified build can be used from http://cchandurkar.github.io/Numbers.js/numbers.min.js\r\n\r\n# Build or Test\r\n1. Clone https://github.com/cchandurkar/Numbers.js\r\n2. `cd Numbers.js && npm install`\r\n3. `npm run build` to create browserified build **OR** `npm run serve` to launch development server that watches file changes and rebuilds. \r\n\r\n## Number Operations\r\n```javascript\r\n// 1. Checks whether number is prime number\r\nnumbers.isPrime(number) => [boolean]\r\n\r\n// 2. Checks whether number is abundant number\r\nnumbers.isAbundant(number) => [boolean]\r\n\r\n// 3. Checks whether number is perfect number\r\nnumbers.isPerfect(number) => [boolean]\r\n\r\n// 4. Checks whether number is deficient number\r\nnumbers.isDeficient(number) => [boolean]\r\n\r\n// 5. Checks whether number is perfect square\r\nnumbers.isPerfectSquare(number) => [boolean]\r\n\r\n// 6. Get all divisors of a number\r\nnumbers.divisors(number) => [array]\r\n```\r\n\r\n## Series Operations\r\n```javascript\r\n// 1. Get a sum of all integers\r\nnumbers.series.sum([numbers]) => [number]\r\n\r\n// 2. Finds a median of the series\r\nnumbers.series.median([numbers]) => [number]\r\n\r\n// 3. Finds a range of the series\r\nnumbers.series.range([numbers]) => [number]\r\n\r\n// 4. Finds a mean of the series\r\nnumbers.series.mean([numbers]) => [number]\r\n\r\n// 5. Finds a mode of the series\r\nnumbers.series.mode([numbers]) => [number]\r\n\r\n// 6. Sorts an array in ascending or descending order\r\nnumbers.series.sort([numbers], descending[boolean]) => [array]\r\n\r\n// 7. Finds nth number in arithmetic series\r\nnumbers.series.nthArithmetic([numbers], n[number]) => [number]\r\n\r\n// 8. Finds nth number in geometric series\r\nnumbers.series.nthGeometric([numbers], n[number]) => [number]\r\n\r\n// 9. Checks whether series is in arithmetic progression\r\nnumbers.series.isArithmetic([numbers]) => [boolean]\r\n\r\n// 10. Checks whether series is in geotetric progression\r\nnumbers.series.isGeometric([numbers]) => [boolean]\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}